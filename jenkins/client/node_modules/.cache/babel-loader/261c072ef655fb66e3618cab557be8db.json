{"ast":null,"code":"import _objectSpread from\"/Users/tanjapolz/Documents/Uni/3/devops/lecture-devops-app/app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/tanjapolz/Documents/Uni/3/devops/lecture-devops-app/app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tanjapolz/Documents/Uni/3/devops/lecture-devops-app/app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/tanjapolz/Documents/Uni/3/devops/lecture-devops-app/app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/tanjapolz/Documents/Uni/3/devops/lecture-devops-app/app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{MDBContainer,MDBRow,MDBCol,MDBDataTable}from'mdbreact';import{listTodo}from'../../utils/APICalls';import'./ListTodo.css';var ListTodo=/*#__PURE__*/function(_Component){_inherits(ListTodo,_Component);var _super=_createSuper(ListTodo);function ListTodo(){var _this;_classCallCheck(this,ListTodo);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={todos:{columns:[{label:'#',field:'id',sort:'asc'},{label:'Title',field:'title',sort:'asc'},{label:'Description',field:'description',sort:'asc'},{label:'',field:'important',sort:'disabled'},{label:'',field:'done',sort:'disabled'},{label:'',field:'delete',sort:'disabled'}],rows:[],errMessage:''}};return _this;}_createClass(ListTodo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;listTodo().then(function(todos){_this2.props.initiateTodo(todos);}).catch(function(error){_this2.setState({errMessage:error.data.message});});this.setState(function(ps){return{todos:_objectSpread(_objectSpread({},ps.todos),{},{rows:_this2.props.fillTodoRows()})};});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(MDBContainer,{className:\"todo-table-main\"},this.state.titleError&&/*#__PURE__*/React.createElement(\"span\",{className:\"error-text\"},\" ToDo Title cannot be blank.\"),/*#__PURE__*/React.createElement(MDBRow,null,/*#__PURE__*/React.createElement(MDBCol,null,/*#__PURE__*/React.createElement(MDBDataTable,{striped:true,bordered:true,small:true,btn:true,data:this.state.todos}))));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){var rows=props.fillTodoRows();return{todos:_objectSpread(_objectSpread({},state.todos),{},{rows:rows,errMessage:''})};}}]);return ListTodo;}(Component);;export default ListTodo;","map":{"version":3,"sources":["/Users/tanjapolz/Documents/Uni/3/devops/lecture-devops-app/app/client/src/components/ListTodo/ListTodo.js"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBDataTable","listTodo","ListTodo","state","todos","columns","label","field","sort","rows","errMessage","then","props","initiateTodo","catch","error","setState","data","message","ps","fillTodoRows","titleError"],"mappings":"25BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,YAAT,CAAuBC,MAAvB,CAA+BC,MAA/B,CAAuCC,YAAvC,KAA2D,UAA3D,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,MAAO,gBAAP,C,GAEMC,CAAAA,Q,mUACFC,K,CAAQ,CACJC,KAAK,CAAE,CACHC,OAAO,CAAE,CACL,CACIC,KAAK,CAAE,GADX,CAEIC,KAAK,CAAE,IAFX,CAGIC,IAAI,CAAE,KAHV,CADK,CAML,CACIF,KAAK,CAAE,OADX,CAEIC,KAAK,CAAE,OAFX,CAGIC,IAAI,CAAE,KAHV,CANK,CAWL,CACIF,KAAK,CAAE,aADX,CAEIC,KAAK,CAAE,aAFX,CAGIC,IAAI,CAAE,KAHV,CAXK,CAgBL,CACIF,KAAK,CAAE,EADX,CAEIC,KAAK,CAAE,WAFX,CAGIC,IAAI,CAAE,UAHV,CAhBK,CAqBL,CACIF,KAAK,CAAE,EADX,CAEIC,KAAK,CAAE,MAFX,CAGIC,IAAI,CAAE,UAHV,CArBK,CA0BL,CACIF,KAAK,CAAE,EADX,CAEIC,KAAK,CAAE,QAFX,CAGIC,IAAI,CAAE,UAHV,CA1BK,CADN,CAkCHC,IAAI,CAAE,EAlCH,CAmCHC,UAAU,CAAE,EAnCT,CADH,C,qEAyCR,4BAAoB,iBAChBT,QAAQ,GACHU,IADL,CACU,SAAAP,KAAK,CAAI,CACX,MAAI,CAACQ,KAAL,CAAWC,YAAX,CAAwBT,KAAxB,EACH,CAHL,EAIKU,KAJL,CAIW,SAAAC,KAAK,CAAI,CACZ,MAAI,CAACC,QAAL,CAAc,CAAEN,UAAU,CAAEK,KAAK,CAACE,IAAN,CAAWC,OAAzB,CAAd,EACH,CANL,EAQA,KAAKF,QAAL,CAAc,SAACG,EAAD,QAAS,CACnBf,KAAK,gCACEe,EAAE,CAACf,KADL,MAEDK,IAAI,CAAE,MAAI,CAACG,KAAL,CAAWQ,YAAX,EAFL,EADc,CAAT,EAAd,EAOH,C,sBAcD,iBAAS,CACL,mBACI,oBAAC,YAAD,EAAc,SAAS,CAAC,iBAAxB,EAES,KAAKjB,KAAL,CAAWkB,UAAZ,eAA2B,4BAAM,SAAS,CAAC,YAAhB,iCAFnC,cAII,oBAAC,MAAD,mBACI,oBAAC,MAAD,mBACI,oBAAC,YAAD,EACI,OAAO,KADX,CAEI,QAAQ,KAFZ,CAGI,KAAK,KAHT,CAII,GAAG,KAJP,CAKI,IAAI,CAAE,KAAKlB,KAAL,CAAWC,KALrB,EADJ,CADJ,CAJJ,CADJ,CAkBH,C,0CA/BD,kCAAgCQ,KAAhC,CAAuCT,KAAvC,CAA8C,CAC1C,GAAMM,CAAAA,IAAI,CAAGG,KAAK,CAACQ,YAAN,EAAb,CAEA,MAAO,CACHhB,KAAK,gCACED,KAAK,CAACC,KADR,MAEDK,IAAI,CAAJA,IAFC,CAGDC,UAAU,CAAE,EAHX,EADF,CAAP,CAOH,C,sBAtEkBd,S,EA4FtB,CAED,cAAeM,CAAAA,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBDataTable } from 'mdbreact';\nimport { listTodo } from '../../utils/APICalls'\nimport './ListTodo.css'\n\nclass ListTodo extends Component {\n    state = {\n        todos: {\n            columns: [\n                {\n                    label: '#',\n                    field: 'id',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Title',\n                    field: 'title',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: '',\n                    field: 'important',\n                    sort: 'disabled'\n                },\n                {\n                    label: '',\n                    field: 'done',\n                    sort: 'disabled'\n                },\n                {\n                    label: '',\n                    field: 'delete',\n                    sort: 'disabled'\n                }\n\n            ],\n            rows: [],\n            errMessage: ''\n        }\n    }\n\n\n    componentDidMount() {\n        listTodo()\n            .then(todos => {\n                this.props.initiateTodo(todos)\n            })\n            .catch(error => {\n                this.setState({ errMessage: error.data.message })\n            })\n\n        this.setState((ps) => ({\n            todos: {\n                ...ps.todos,\n                rows: this.props.fillTodoRows()\n            }\n        })\n        )\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const rows = props.fillTodoRows()\n\n        return {\n            todos: {\n                ...state.todos,\n                rows,\n                errMessage: ''\n            }\n        }\n    }\n\n    render() {\n        return (\n            <MDBContainer className=\"todo-table-main\" >\n                {\n                    (this.state.titleError) && <span className=\"error-text\"> ToDo Title cannot be blank.</span>\n                }\n                <MDBRow>\n                    <MDBCol>\n                        <MDBDataTable\n                            striped\n                            bordered\n                            small\n                            btn\n                            data={this.state.todos}\n                        />\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n};\n\nexport default ListTodo;"]},"metadata":{},"sourceType":"module"}