{"ast":null,"code":"import axios from'axios';var axiosInstance=axios.create({baseURL:process.env.PUBLIC_URL,withCredentials:true});axiosInstance.interceptors.response.use(function(res){return res;},function(error){return Promise.reject(error.response);});export var signout=function signout(){return axiosInstance.post(process.env.PUBLIC_URL+'/logout').then(function(user){// delete axiosInstance.defaults.headers.common[\"Authorization\"];\nreturn user.data;});};export var init=function init(){return axiosInstance.post('/init').then(function(user){return user.data;});};export var login=function login(email,password){return axiosInstance.post('/login',{email:email,password:password}).then(function(user){// axiosInstance.defaults.headers.common[\"Authorization\"] = `Bearer ${user.data.token}`;\nreturn user.data;});};export var signup=function signup(name,email,password){return axiosInstance.post('/signup',{name:name,email:email,password:password}).then(function(user){return user.data;});};export var addTodo=function addTodo(title,description){return axiosInstance.post('/todo/add',{title:title,description:description}).then(function(todo){return todo.data;});};export var listTodo=function listTodo(){//I have used post instead of get, read https://blog.teamtreehouse.com/the-definitive-guide-to-get-vs-post\nreturn axiosInstance.post('/todo/list').then(function(todos){return todos.data;});};export var updateTodo=function updateTodo(_id){var important=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var done=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;//I have used post instead of get, read https://blog.teamtreehouse.com/the-definitive-guide-to-get-vs-post\nvar fieldsToUpdate={_id:_id};if(important!==null){fieldsToUpdate.important=important;}if(done!==null){fieldsToUpdate.done=done;}return axiosInstance.patch('/todo/update',fieldsToUpdate).then(function(todo){return todo.data;});};export var deleteTodo=function deleteTodo(_id){//I have used post instead of get, read https://blog.teamtreehouse.com/the-definitive-guide-to-get-vs-post\nreturn axiosInstance.delete('/todo/delete',{data:{_id:_id}}).then(function(todo){return todo;});};","map":{"version":3,"sources":["/Users/tanjapolz/Documents/Uni/3/devops/lecture-devops-app/app/client/src/utils/APICalls.js"],"names":["axios","axiosInstance","create","baseURL","process","env","PUBLIC_URL","withCredentials","interceptors","response","use","res","error","Promise","reject","signout","post","then","user","data","init","login","email","password","signup","name","addTodo","title","description","todo","listTodo","todos","updateTodo","_id","important","done","fieldsToUpdate","patch","deleteTodo","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst axiosInstance = axios.create({\n    baseURL: process.env.PUBLIC_URL,\n    withCredentials: true,\n});\n\naxiosInstance.interceptors.response.use(\n    res => {\n\n        return res;\n    },\n    error => {\n        return Promise.reject(error.response)\n    }\n);\n\nexport const signout = () => {\n    return axiosInstance.post(process.env.PUBLIC_URL + '/logout').then(user => {\n        // delete axiosInstance.defaults.headers.common[\"Authorization\"];\n        return user.data\n    })\n}\n\n\nexport const init = () => {\n    return axiosInstance.post('/init').then(user => {\n        return user.data\n    })\n}\n\nexport const login = (email, password) => {\n    return axiosInstance.post('/login', {\n        email,\n        password\n    }).then(user => {\n        // axiosInstance.defaults.headers.common[\"Authorization\"] = `Bearer ${user.data.token}`;\n        return user.data\n    })\n}\n\nexport const signup = (name, email, password) => {\n    return axiosInstance.post('/signup', {\n        name,\n        email,\n        password\n    }).then(user => {\n        return user.data\n    })\n}\n\nexport const addTodo = (title, description) => {\n    return axiosInstance.post('/todo/add', {\n        title,\n        description\n    }).then(todo => {\n        return todo.data\n    })\n}\n\nexport const listTodo = () => {\n    //I have used post instead of get, read https://blog.teamtreehouse.com/the-definitive-guide-to-get-vs-post\n    return axiosInstance.post('/todo/list').then(todos => {\n        return todos.data\n    })\n}\n\n\nexport const updateTodo = (_id, important = null, done = null) => {\n    //I have used post instead of get, read https://blog.teamtreehouse.com/the-definitive-guide-to-get-vs-post\n    const fieldsToUpdate = {\n        _id\n    }\n\n    if (important !== null) {\n        fieldsToUpdate.important = important\n    }\n    if (done !== null) {\n        fieldsToUpdate.done = done\n    }\n    return axiosInstance.patch('/todo/update', fieldsToUpdate).then(todo => {\n        return todo.data\n    })\n}\n\n\nexport const deleteTodo = (_id) => {\n    //I have used post instead of get, read https://blog.teamtreehouse.com/the-definitive-guide-to-get-vs-post\n    return axiosInstance.delete('/todo/delete', {\n        data: {\n            _id,\n        }\n    }).then(todo => {\n        return todo\n    })\n}"]},"metadata":{},"sourceType":"module"}